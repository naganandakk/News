{"version":3,"sources":["history.js","components/Header.js","apis/articles.js","components/articles/Article.js","components/articles/ArticleFilters.js","components/articles/ArticleList.js","store/actions/index.js","store/actions/types.js","App.js","store/reducers/authReducer.js","store/reducers/index.js","store/reducers/articleReducer.js","store/reducers/filterReducer.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","Header","react_default","a","createElement","className","react_router_dom","to","apiKeys","client","axios","create","baseURL","interceptors","request","use","apiKeyIndex","Math","floor","random","length","apiKey","headers","Authorization","concat","Article","props","article","alt","src","urlToImage","title","content","ArticleFilter","type","placeholder","value","selected","React","Component","ArticleList","renderPlaceHolder","placeHolderList","Object","toConsumableArray","Array","keys","map","idx","Fragment","key","renderArticles","_this","articles","articleList","articles_Article","this","fetchArticles","objectSpread","pageSize","sources","filters","ArticleFilters","connect","state","params","arguments","undefined","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","queryParams","response","wrap","_context","prev","next","join","get","sent","payload","data","stop","_x","apply","App","react_router","history","components_Header","path","exact","component","INITIAL_STATE","isSignedIn","user","authReducer","action","combineReducers","auth","_","omit","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ee03b96.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div className=\"ui menu\">\n            <Link to=\"/\">\n                <div className=\"header item\">News</div>\n            </Link>\n        </div>\n    )\n}\n\nexport default Header;","import axios from 'axios';\n\nconst apiKeys = [\n    \"f251266458e947ba94e465c731e10a2a\",\n    \"afbacd1a0f8a435e8971084223998783\"\n]\n\nconst client = axios.create({\n    baseURL: \"https://newsapi.org/v2\"\n})\n\nclient.interceptors.request.use((request) => {\n    const apiKeyIndex = Math.floor((Math.random() * apiKeys.length));\n    const apiKey = apiKeys[apiKeyIndex];\n\n    request.headers.Authorization = `Bearer ${apiKey}`;\n\n    return request;\n});\n\nexport default client;","import React from 'react';\n\nconst Article = (props) => {\n    const { article } = props;\n\n    return (\n        <div className=\"item\">\n            <div className=\"ui small image\">\n                <img alt=\"\" src={article.urlToImage} />\n            </div>\n            <div className=\"content\">\n                <div className=\"header\">{article.title}</div>\n                <div className=\"description\">\n                    <p>{article.content}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Article;","import React from 'react';\n\nclass ArticleFilter extends React.Component {\n\n  render() {\n    return (\n      <div className=\"ui action input\">\n        <input type=\"text\" placeholder=\"Search...\" />\n        <select className=\"ui compact selection dropdown\">\n          <option value=\"all\">All</option>\n          <option selected=\"\" value=\"articles\">Articles</option>\n          <option value=\"products\">Products</option>\n        </select>\n        <div className=\"ui button\">Search</div>\n      </div>\n    )\n  }\n}\n\nexport default ArticleFilter;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchArticles } from '../../store/actions';\nimport Article from './Article';\nimport ArticleFilters from './ArticleFilters';\n\nclass ArticleList extends React.Component {\n    componentDidMount () {\n        this.props.fetchArticles({\n            pageSize: 100,\n            sources: \"the-hindu\",\n            ...this.props.filters\n        });\n    }\n\n    renderPlaceHolder = () => {\n        const placeHolderList = [...Array(5).keys()].map(idx => {\n            return (\n                <React.Fragment key={idx}>\n                    <div className=\"image header\">\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                    </div>\n                    <div className=\"paragraph\">\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                    </div>\n                </React.Fragment>\n            )\n        });\n\n        return (\n            <div className=\"ui placeholder\">\n                {placeHolderList}\n            </div>\n        )\n    }\n\n    renderArticles = () => {\n        if (!this.props.articles.length) {\n            return this.renderPlaceHolder();\n        }\n\n        const articleList = this.props.articles.map((article, idx) => {\n            return <Article article={article} key={idx}/>\n        });\n\n        return (\n            <div className=\"ui items\">\n                {articleList}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ArticleFilters />\n                {this.renderArticles()}\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        articles: state.articles,\n        filters: state.filters\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        fetchArticles\n    }\n)(ArticleList);","import {\n    SIGN_IN, SIGN_OUT,\n    FETCH_ARTICLES,\n    UPDATE_FILTERS,\n    REMOVE_FILTERS\n} from './types';\nimport articles from '../../apis/articles';\n\nexport const signIn = (user) => {\n    return {\n        type: SIGN_IN,\n        payload: user\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const fetchArticles = (params = {}) => async dispatch => {\n    const queryParams = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n    const response = await articles.get(`/everything?${queryParams}`);\n\n    dispatch({\n        type: FETCH_ARTICLES,\n        payload: response.data.articles\n    });\n};\n\nexport const updateFilters = (filters = {}) => {\n    return {\n        type: UPDATE_FILTERS,\n        payload: filters\n    }\n};\n\nexport const removeFilters = (filters = []) => {\n    return {\n        type: REMOVE_FILTERS,\n        payload: filters\n    }\n};","export const SIGN_IN = \"SIGN_IN\"\nexport const SIGN_OUT = \"SIGN_OUT\"\nexport const FETCH_ARTICLES = \"FETCH_ARTICLES\"\nexport const UPDATE_FILTERS = \"ADD_FILTERS\"\nexport const REMOVE_FILTERS = \"REMOVE_FILTERS\"","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport history from './history';\n\nimport './App.css';\n\nimport Header from './components/Header';\nimport ArticleList from './components/articles/ArticleList';\n\nfunction App() {\n  return (\n    <div className=\"ui container\">\n      <Router history={history}>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={ArticleList} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: false,\n    user: {}\n}\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, user: action.payload }\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, user:{} }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","import { combineReducers } from 'redux';\n\nimport authReducer from './authReducer';\nimport articleReducer from './articleReducer';\nimport filterReducer from './filterReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    articles: articleReducer,\n    filters: filterReducer\n})","import {\n    FETCH_ARTICLES,\n} from '../actions/types'\n\nexport default (state = [], action) => {\n    switch(action.type) {\n        case FETCH_ARTICLES:\n            return [ ...state, ...action.payload ];\n        default:\n            return state;\n    }\n}","import {\n    UPDATE_FILTERS,\n    REMOVE_FILTERS\n} from '../actions/types'\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_FILTERS:\n            return [ ...state, ...action.payload ];\n        case REMOVE_FILTERS:\n            return _.omit(state, action.payload)\n        default:\n            return state;\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport reducers from './store/reducers';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(\n            reduxThunk\n        )\n    )\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}